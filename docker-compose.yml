version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  airflow:
    image: apache/airflow:3.0.4-python3.12
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - _PIP_ADDITIONAL_REQUIREMENTS=mlflow>=2.8.0 scikit-learn>=1.3.0 pandas>=2.0.0 great-expectations>=0.18.0
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=admin
      - _AIRFLOW_WWW_USER_EMAIL=admin@example.com
      - _AIRFLOW_WWW_USER_FIRSTNAME=Admin
      - _AIRFLOW_WWW_USER_LASTNAME=User
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./models:/opt/airflow/models
      - ./data:/opt/airflow/data
      - ./notebooks:/opt/airflow/notebooks
      - ./configs:/opt/airflow/config
      - ./artifacts:/opt/airflow/artifacts
      - ./scripts:/opt/airflow/scripts
      - ./sql:/opt/airflow/sql
      - ./pyproject.toml:/tmp/pyproject.toml
    user: "${AIRFLOW_UID:-50000}:0"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      bash -c "
        pip install mlflow scikit-learn pandas great-expectations &&
        airflow db migrate &&
        airflow standalone
      "
    restart: always

volumes:
  postgres-db-volume: